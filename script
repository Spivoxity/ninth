2 2 + . nl
: double 2 * ; 
3 double . nl

: on 1 swap ! ;
: off 0 swap ! ;

: # immediate 10 scan pop ;
# Now we can write comments like this

: test # and embedded ones too
8 # more
double ;

test .

: -rot rot rot ;
: over swap dup rot swap ;

# Tricky, because our own return address is on the r-stack
: >r rp @ dup @       # v rp@ ra
over 4 - dup          # v rp@ ra rp@-4 rp@-4
rp ! ! ! ;

: <r rp @ dup @ swap  # ra rp@
4 + dup               # ra rp@+4 rp@+4
rp ! dup @            # ra rp@+4 v
-rot ! ;

: test 3 >r 5 >r 10 <r - <r - . nl ;

test # 2

: test 3 ['] double MEM + execute . nl ;

test # 6

: ' word [create] ;

3 ' double execute .

: quote immediate ['] lit gentok ' genword ['] gentok gentok ;

: ddouble immediate quote double ;

: test 3 ddouble . nl ;

test # 6

: here dp @ ;

: 2/ 2 / ;

: >mark here 0 gentok ;
: >resolve here over - 2/ 1- swap tok! ;

: if immediate quote branch0 >mark ;
: else immediate quote branch >mark swap >resolve ;
: fi immediate >resolve ;

: test 6 < if 3 else 4 fi ;

1 test . nl # 3
8 test . nl # 4

' fac pop

: fac dup if dup 1 - fac * else pop 1 fi ;

10 fac . nl # 3628800
